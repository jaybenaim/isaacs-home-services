{"version":3,"sources":["components/Footer/footer.module.css","utils/setAuthToken.js","api/local.js","redux/actions/authActions.js","redux/actions/types.js","components/Auth/index.jsx","components/NavBar/index.jsx","components/Footer/index.jsx","components/Home/Home.jsx","components/Auth/Login.jsx","components/Auth/Register.jsx","components/ErrorPage/index.jsx","App.jsx","components/ErrorBoundary/index.jsx","redux/reducers/authReducers.js","redux/reducers/errorReducers.js","redux/reducers/index.js","redux/store.js","registerServiceWorker.js","index.jsx"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","create","baseURL","loginUser","userData","dispatch","local","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","catch","err","type","payload","withRouter","connect","state","auth","errors","logoutUser","removeItem","props","name","user","isAuthenticated","handleLogoutUser","className","id","onClick","e","preventDefault","onLogoutClick","to","NavBar","Fragment","Dropdown","Toggle","Menu","Footer","styles","footer","title","description","footerlink","href","Home","Login","Component","email","password","onChange","this","setState","target","value","onSubmit","showErrors","keys","Object","i","length","nextProps","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","render","style","marginTop","paddingLeft","response","noValidate","error","placeholder","classnames","invalid","emailnotfound","htmlFor","display","passwordincorrect","width","borderRadius","letterSpacing","Register","password2","newUser","registerUser","ErrorPage","App","exact","path","component","ErrorBoundary","React","constructor","super","hasError","componentDidCatch","errorInfo","children","isEmpty","require","initialState","loading","combineReducers","action","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","createBrowserHistory","listen","ReactGA","set","page","pathname","pageview","initialize","hash","ReactSEO","startMagic","url","isFullMatch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29c8895a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2oW47\",\"title\":\"footer_title__piRrt\",\"description\":\"footer_description__NPmPK\",\"footerlink\":\"footer_footerlink__aH3y3\"};","import axios from \"axios\";\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api\",\n});\n","import setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nimport local from \"../../api/local\";\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  local\n    .post(\"/users/register\", userData)\n    .then((res) => {\n      dispatch(loginUser(userData));\n\n      history.push(\"/\");\n    }) // re-direct to login on successful register\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  local\n    .post(\"/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React from \"react\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"../../assets/stylesheets/auth.css\";\n\nconst Auth = (props) => {\n  const {\n    auth: {\n      user: { name },\n      isAuthenticated,\n    },\n    logoutUser: handleLogoutUser,\n  } = props;\n\n  const onLogoutClick = (e) => {\n    e.preventDefault();\n    handleLogoutUser();\n  };\n\n  return !isAuthenticated ? (\n    <div className=\"auth-content\">\n      <Link to=\"/login\" className=\"auth-link\">\n        Log In\n      </Link>\n      <Link to=\"/register\" className=\"auth-link\">\n        Register\n      </Link>\n    </div>\n  ) : (\n    <div className=\"auth-content\">\n      <button\n        id=\"logout\"\n        onClick={(e) => onLogoutClick(e)}\n        className=\" auth-link\"\n      >\n        Logout <span className=\"auth-content--name\"> {name}?</span>\n      </button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default withRouter(connect(mapStateToProps, { logoutUser })(Auth));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../Auth\";\n\nimport { Dropdown } from \"react-bootstrap\";\nimport \"../../assets/stylesheets/navbar.css\";\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Isaac's Home Services\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active \" to=\"/\">\n            Home\n          </Link>\n          <Dropdown>\n            <Dropdown.Toggle id=\"navbar-toggle\">Account</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Auth />\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-around\">\r\n          <div className=\"col-8 col-md-5\">\r\n            <h5 className={styles.title}>AGW</h5>\r\n            <p className={styles.description}>\r\n              This is placeholder text. Your web app description goes here.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main id=\"mainContent\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-5 p-0\">\r\n          <h3>Home</h3>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: {},\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      nextProps.history.push(\"/\");\n    }\n    if (nextProps.errors) {\n      return {\n        errors: nextProps.errors,\n      };\n    }\n    return null;\n  }\n  componentDidMount() {\n    this.setState({ errors: {} });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.auth.isAuthenticated) {\n      prevProps.history.push(\"/\");\n    }\n    if (prevState.errors.length >= 1) {\n      this.setState({ errors: prevState });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData);\n  };\n  showErrors = (errors) => {\n    let keys = Object.keys(errors);\n    for (let i = 0; i < keys.length; i++) {\n      return <li>{errors[keys[i]]}</li>;\n    }\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            {errors.response && (\n              <div>{this.showErrors(errors.response.data)}</div>\n            )}\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound,\n                  })}\n                />\n                <label htmlFor=\"email\" style={{ display: \"none\" }}>\n                  Email\n                </label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>{\" \"}\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect,\n                  })}\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                <label htmlFor=\"password\" style={{ display: \"none\" }}>\n                  Password\n                </label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../redux/actions/authActions\";\nimport classnames from \"classnames\";\nimport \"../../assets/stylesheets/register.css\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    errors: {},\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.errors) {\n      return {\n        errors: nextProps.errors,\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.auth.isAuthenticated) {\n      prevProps.history.push(\"/\");\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container register-container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name,\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email,\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password,\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2,\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../assets/stylesheets/errorPage.css\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <h2>Oops, The Page you are looking for can't be found!</h2>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n      {/* <!-- This templates was made by Colorlib (https://colorlib.com) --> */}\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\n\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport ErrorPage from \"./components/ErrorPage\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nconst App = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/services\" component={Home} />\n\n        <Route\n          exact\n          path=\"/register\"\n          render={(props) => <Register {...props} />}\n        />\n        <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\n        <Route exact path=\"/404\" render={(props) => <ErrorPage {...props} />} />\n      </Switch>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ErrorPage from \"../ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport App from \"./App\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport ReactSEO from \"react-seo\";\r\n\r\nimport unregister from \"./registerServiceWorker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction initializeReactGA() {\r\n  ReactGA.initialize(\"UA-151372187-4\");\r\n  ReactGA.pageview(window.location.hash);\r\n}\r\n// Initialize google analytics page view tracking\r\nconst history = createBrowserHistory();\r\n\r\nhistory.listen((location) => {\r\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\r\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\r\n});\r\ninitializeReactGA();\r\n\r\nReactSEO.startMagic(\r\n  [\r\n    {\r\n      url: \"https://isaacs-home-services.herokuapp.com/#/services\",\r\n      isFullMatch: false,\r\n    },\r\n    {\r\n      url: \"/404\",\r\n      isFullMatch: false,\r\n    },\r\n  ],\r\n  renderDOM\r\n);\r\nfunction renderDOM() {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <HashRouter history={history}>\r\n        <ErrorBoundary>\r\n          <App />\r\n        </ErrorBoundary>\r\n      </HashRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nunregister();\r\n"],"sourceRoot":""}